{
    "sourceFile": "functions.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1723832676778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723832716034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     }else {\n         $stmt = $con->prepare(\"SELECT  * FROM $table WHERE   $where \");\n     }\n     $stmt->execute($values);\n-    $data = $stmt->fetchAll(PDO::FETCH_OBJ);\n+    $data = $stmt->fetchAll(PDO::FETCH_NUM);\n     $count  = $stmt->rowCount();\n     if ($json ==true) {\n         if ($count > 0){\n             echo json_encode(array(\"status\" => \"success\", \"data\" => $data));\n"
                },
                {
                    "date": 1723832798957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     }else {\n         $stmt = $con->prepare(\"SELECT  * FROM $table WHERE   $where \");\n     }\n     $stmt->execute($values);\n-    $data = $stmt->fetchAll(PDO::FETCH_NUM);\n+    $data = $stmt->fetchAll(PDO::FETCH_ASSOC);\n     $count  = $stmt->rowCount();\n     if ($json ==true) {\n         if ($count > 0){\n             echo json_encode(array(\"status\" => \"success\", \"data\" => $data));\n"
                }
            ],
            "date": 1723832676778,
            "name": "Commit-0",
            "content": "<?php\n\n// ==========================================================\n//  Copyright Reserved Wael Wael Abo Hamza (Course Ecommerce)\n// ==========================================================\n\ndefine(\"MB\", 1048576);\n\nfunction filterRequest($requestname)\n{\n  return  htmlspecialchars(strip_tags($_POST[$requestname],));\n}\nfunction filterRequest2($requestname)\n{\n  return htmlspecialchars(strip_tags($_POST[$requestname],$_POST[$requestname]));\n}\n\nfunction getAllData($table, $where = null, $values = null,$json= true)\n{\n    global $con;\n    $data = array();\n    if ($where == null) {\n        $stmt = $con->prepare(\"SELECT  * FROM $table  \");\n    }else {\n        $stmt = $con->prepare(\"SELECT  * FROM $table WHERE   $where \");\n    }\n    $stmt->execute($values);\n    $data = $stmt->fetchAll(PDO::FETCH_OBJ);\n    $count  = $stmt->rowCount();\n    if ($json ==true) {\n        if ($count > 0){\n            echo json_encode(array(\"status\" => \"success\", \"data\" => $data));\n        } else \n        {\n                 printfailer('Sorry try agin');\n\n        }\n        return $count;\n    }else {\n        if ($count > 0){\n         return array(\"status\" => \"success\",\"data\"=>$data); \n        } else {\n       return     printfailer('Sorry try agin');\n\n        }\n\n    }\n\n}\nfunction getData($table, $where = null, $ww=false,$values = null,$json=true,)\n{\n    global $con;\n    $data = array();\n    $stmt = $con->prepare(\"SELECT  * FROM $table WHERE   $where \");\n    $stmt->execute($values);\n    $data = $stmt->fetch(PDO::FETCH_ASSOC);\n    $count  = $stmt->rowCount();\n    if ($json ==true) {\n\n    if ($count > 0){\n        if ($ww==true ) {\n        return    $data['item_id'];\n            // echo json_encode(array(\"data\" => $data['item_id']));\n\n        }else {\n        }\n        echo json_encode(array(\"status\" => \"success\", \"data\" => $data));\n\n    } else {\n        printfailer('Sorry try agin');\n    }\n}else {\n    return $count;\n\n}\n}\n\n\nfunction insertData($table, $data, $json = true)\n{\n    global $con;\n    foreach ($data as $field => $v)\n        $ins[] = ':' . $field;\n    $ins = implode(',', $ins);\n    $fields = implode(',', array_keys($data));\n    $sql = \"INSERT INTO $table ($fields) VALUES ($ins)\";\n    $stmt = $con->prepare($sql);\n    foreach ($data as $f => $v) {\n        $stmt->bindValue(':' . $f, $v);\n    }\n    $stmt->execute();\n\n    $count = $stmt->rowCount();\n    if ($json == true) {\n     result($count,'Sorry try agin')   ;\n  }\n    return $count;\n}\n\n\nfunction updateData($table, $data, $where, $json = true)\n{\n\n    global $con;\n    $cols = array();\n    $vals = array();\n\n    foreach ($data as $key => $val) {\n        $vals[] = \"$val\";\n        $cols[] = \"`$key` =  ? \";\n    }\n    $sql = \"UPDATE $table SET \" . implode(', ', $cols) . \" WHERE $where\";\n\n    $stmt = $con->prepare($sql);\n    $stmt->execute($vals);\n    $count = $stmt->rowCount();\n    if ($json == true) {\n        result($count,'Sorry try agin')   ;\n\n    }\n    return $count;\n}\n\nfunction deleteData($table, $where, $json = true)\n{\n    global $con;\n    $stmt = $con->prepare(\"DELETE FROM $table WHERE $where\");\n    $stmt->execute();\n    $count = $stmt->rowCount();\n    if ($json == true) {\n        result($count,'Sorry try agin')   ;\n\n    }\n    return $count;\n}\n\nfunction imageUpload($dir,$imageRequest)\n{\n  global $msgError;\n  if (isset($_FILES[$imageRequest])) {\n    $imagename  = rand(1000, 10000) . $_FILES[$imageRequest]['name'];\n    $imagetmp   = $_FILES[$imageRequest]['tmp_name'];\n    $imagesize  = $_FILES[$imageRequest]['size'];\n    $allowExt   = array(\"jpg\", \"png\", \"gif\", \"mp3\", \"pdf\");\n    $strToArray = explode(\".\", $imagename);\n    $ext        = end($strToArray);\n    $ext        = strtolower($ext);\n  \n    if (!empty($imagename) && !in_array($ext, $allowExt)) {\n      $msgError = \"EXT\";\n    }\n    if ($imagesize > 2 * MB) {\n      $msgError = \"size\";\n    }\n    if (empty($msgError)) {\n        move_uploaded_file($imagetmp, $dir . \"/\" . $imagename);\n\n    //   move_uploaded_file($imagetmp, $dir. \"/\". $imagename);\n      return $imagename;\n    } else {\n      return \"fail\";\n    }  }else {\n        return \"empty\";\n    }\n\n}\n\n\n\nfunction deleteFile($dir, $imagename)\n{\n    if (file_exists($dir . \"/\" . $imagename)) {\n        unlink($dir . \"/\" . $imagename);\n    }\n}\n\nfunction checkAuthenticate()\n{\n    if (isset($_SERVER['PHP_AUTH_USER'])  && isset($_SERVER['PHP_AUTH_PW'])) {\n        if ($_SERVER['PHP_AUTH_USER'] != \"wael\" ||  $_SERVER['PHP_AUTH_PW'] != \"wael12345\") {\n            header('WWW-Authenticate: Basic realm=\"My Realm\"');\n            header('HTTP/1.0 401 Unauthorized');\n            echo 'Page Not Found';\n            exit;\n        }\n    } else {\n        exit;\n    }\n\n    // End \n}\n\nfunction printfailer($messege= 'none')\n{\n    echo json_encode(array(\"status\"=> 700, \"messege\"=> $messege));\n}\n\nfunction printSuccess($messege= 'none')\n{\n    echo json_encode(array(\"status\"=> 200, \"messege\"=> $messege));\n}\n\nfunction result($count,$messege){\nif ($count>0) {\n    printSuccess();\n}else {\n    printfailer($messege);\n}\n\n}\n\n\n\n\n\n\nfunction sendemail($to, $title, $body){\n    //هذه مسؤوله عن بعت رساله او كود الي الايميل لكن\n    // لن تعمل لانه يجب رفعه علي استضافه\n\n    $header = \"From: support@gmail.com\" .\"\\n\" .\"CC :mjad3711@gmail.com\";\n\n    mail($to, $title,$body, $header);\n}\n\n\n\nfunction sendGCM($title, $message, $topic, $pageid, $pagename,$image)\n{\n\n\n    $url = 'https://fcm.googleapis.com/fcm/send';\n\n    $fields = array(\n        \"to\" => '/topics/' . $topic,\n        'priority' => 'high',\n        'content_available' => true,\n\n        'notification' => array(\n            \"body\" =>  $message,\n            \"title\" =>  $title,\n            \"click_action\" => \"FLUTTER_NOTIFICATION_CLICK\",\n            \"sound\" => \"default\",\n            \"imageUrl\"=>$image\n\n        ),\n        'data' => array(\n            \"pageid\" => $pageid,\n            \"pagename\" => $pagename\n        )\n\n    );\n\n\n    $fields = json_encode($fields);\n    $headers = array(\n        'Authorization: key=' . \"AAAAN03T-ig:APA91bFxlKS53s8DBMlMGzmbFsOaGP3b5xVf-1gS6YbJMM84r_Oy1EPdQUNe9xLxK2VZUA1Dje9DO1A0RHhkoaolvqybWdrSPOwKh3MdWoS5ZIzsZMzjrQisVG9TP32Glzah_fTcikPq\",\n        'Content-Type: application/json'\n    );\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $fields);\n\n    $result = curl_exec($ch);\n    return $result;\n    curl_close($ch);\n}\nfunction insertNotify($title, $body, $userid,$topic,$pageid,$pagename)\n{\n    global $con;\n    $stmt=$con->prepare(\"INSERT INTO `notification`(`notification_userid`, `notification_title`, `notification_body`,) VALUES (?,?,?)\");\n   $stmt->execute(array($userid,$title,$body));\n   sendGCM($title,$body,$topic,$pageid,$pagename,'');\n   $count =$stmt->rowCount();\n   result($count,'Sorry try agin')   ;\n\n   return $count;\n}\n\n\nfunction insertNotifyimage($title, $body, $userid,$topic,$pageid,$pagename,$image)\n{\n    global $con;\n    $stmt=$con->prepare(\"INSERT INTO `notification`(`notification_userid`, `notification_title`, `notification_body`,notification_image) VALUES (?,?,?,?)\");\n   $stmt->execute(array($userid,$title,$body,$image));\n   sendGCM($title,$body,$topic,$pageid,$pagename,$image);\n   $count =$stmt->rowCount();\n   result($count,'Sorry try agin')   ;\n\n   return $count;\n}\n//////////////////////\n\nfunction imagesUploads($dir,$imageRequest)\n{\n  global $msgError;\n//   echo json_encode($_FILES[$imageRequest]);\n//   if ( $_FILES[$imageRequest]['name'] ==[\"\"]) {\n//     return \"empty\";\n// }else {\n    if (isset($_FILES[$imageRequest]) ) {\n        $images=$_FILES[$imageRequest];\n        foreach ($images['name'] as $index => $image) {\n          $imagename =rand(1000, 10000) . $image;\n          $tmpPath = $images['tmp_name'][$index];\n          $imagesize = $images['size'][$index];\n          $allowExt   = array(\"jpg\", \"png\", \"gif\", \"mp3\", \"pdf\");\n          $strToArray = explode(\".\", $imagename);\n          $ext        = end($strToArray);\n          $ext        = strtolower($ext);\n          $savePath = $dir . '/' . $imagename;\n      if (!empty($imagename) && !in_array($ext, $allowExt)) {\n              $msgError = \"EXT\";\n            }\n            if ($imagesize > 10 * MB) {\n              $msgError = \"size\";\n            }\n          // Check for upload errors\n    \n          // Move the uploaded file to the save directory\n          if (move_uploaded_file($tmpPath, $savePath)) {\n            $savedImages[] = $imagename;\n          } else {\n            echo \"Error saving image $imagename\\n\";\n          }\n        }\n        return $savedImages;\n     }else {\n            return \"empty\";\n        }\n    //   }\n \n}\nfunction EditListDetailas($String,$imageNames,$id){\n    global $con;\n\n\n\n    foreach ($imageNames[$String] as $index => $value) {\n\n        $C=$value;\n        \n        $stmt= $con->prepare(\" SELECT * FROM detailas WHERE $String = ? AND item_deitalis =? \");\n        $stmt-> execute(array($C ,$id));\n        $count = $stmt-> rowCount();\n        if ($count > 0) {\n            // echo 'success';\n        }else{\n        $data=array(\n        $String=>$C,\n        'item_deitalis'=>$id,\n\n        );\n            insertData('detailas',$data,false);\n       \n        }\n        }\n}\n////\nfunction addListDetailas($String,$imageNames,$id){\n\n\n    foreach ($imageNames[$String] as $index => $value) {\n        $data=array(\n        'item_deitalis'=>$id,\n        $String=>$value,\n        );\n        insertData('detailas',$data,false);\n       \n        }\n  \n  }\n\n"
        }
    ]
}